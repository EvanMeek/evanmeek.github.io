#+SETUPFILE: ../theme-rose.setup
#+DATE: <2020-07-01 Wed 21:53>
#+TITLE: CS

计算机相关课程介绍。

** 离散数学

i.e. Discrete Mathematics

本课程系统介绍 _数理逻辑_ 以及 _集合论_ 的基础知识，包括命题逻辑和谓词逻辑、定理的推理演算和机器证明方法，集合和二元关系的基本运算和性质、任意集合中和函数及其性质，无穷集合的基数，以及上述知识在计算机科学中的应用。还介绍 _图_ 的基本概念，欧拉回路，哈密顿回路，最短路，树，平面图与图和着色，匹配与网络流，图的连通性，群、环、域、布尔代数。

** 软件工程

i.e. Software Engineering

本课程以 _软件生命周期_ 的主要活动为主线，从软件及软件工程的历史和发展、软件开发过程、需求分析、软件设计、程序编码、软件测试、软件维护、软件项目管理、标准及规范等方面全面介绍软件工程的基本理论、方法、技术和工具。

** 计算机组成与系统结构

i.e. Computer Organization and Architecture

本课程简单介绍数字电路与计算机中的某些部件的逻辑线路设计，课程主体知识是讲解简单、完整的计算机组成原理和内部运行机制，包括数据表示和运算器部件、指令系统和控制器部件、层次存储器系统、输入输出系统（总线、接口）和输入输出设备等。

*** 计算机组成原理

i.e. Computer Organization

本课程主要介绍简单、完整、单处理器计算机的基本组成原理和几个内部运行机制，并探索硬、软件之间相互作用的关系，以及如何有效利用硬件提高系统性能。内容包括算术逻辑部件（ALU）、指令系统、控制器设计、高速缓冲存储器和虚拟存储器、总线和外部设备等，尽力体现设计计算机时在成本、性能和复杂性之间的权衡。

*** 计算机系统结构

i.e. Computer Architecture

计算机系统结构是以计算机系统的外部为主来讲解计算机系统基本结构的一门学科。所谓外部特性是指编写出能够在计算机系统上正确运行的程序所必须了解的计算机系统的特性。

计算机系统结构研究的主要内容包括：数据表示、寻址方式、指令系统、存储系统、输入输出系统、流水线处理机、超标量处理机、互连网络、向量处理机、并行处理机和多处理机等。

** 操作系统

i.e. Modern Operating Systems

本课程主要讲述现代计算机操作系统的基础知识，分析现代主流操作系统的基本原理与实现技术。旨在掌握操作系统的基本原理，解决系统问题。主要内容包括当代操作系统的基本概念、演化与机制，进程与线程管理， CPU 调度，内存管理，输入输出，文件系统，设备驱动程序，网络技术等。

** 程序语言
*** 计算机程序设计基础（Python）

i.e. The Fundamentals of Computer Programming (Python)

本课程以 Python 语言程序设计和内容为基础，注重讲解程序设计的概念、方法和思路。旨在掌握基本的编程技术，提高逻辑思维能力、系统思维能力和抽象思维能力。主要内容包括：程序设计的基本概念、 Python 语言基础与 Python 程序结构、数学与数值计算、字符串与文件操作、列表与数据操作、函数与递归函数、分支结构与循环结构、程序设计方法学、面向过程程序设计与面向对象程序设计、图形编程、算法设计等。

*** 计算机程序设计基础（C）

i.e. Programming Fundamentals

本课程以 C 语言程序设计内容为基础，注重讲解程序设计的概念、方法和思路，培养基本编程能力，以及逻辑思维和抽象思维能力。主要内容包括 C 语言基础与程序控制结构、结构化程序设计，函数与模块化、库与接口设计、复合数据类型（数组、指针、结构体）、文件、算法设计、递归程序设计、数据抽象、程序抽象等。

*** 汇编语言程序设计

i.e. Assembly Language Programming

本课程与计算机组成原理、编译原理、操作系统、计算机系统结构等课程组成计算机系统核心课程。你应该掌握了 C 语言，该课程从相对熟悉和语言入手可以加深对汇编和理解与印象。更重要的，汇编语言是高级语言在机器层面的表示，掌握这两种语言和对应可以将程序的执行与计算机的工作过程紧密联系起来，直接体现汇编语言本身固有和特点，即它是最易于将“程序”和“机器”统一起来和一个结合点。进一步的通过对不同汇编代码的解释来给出微体系结构方面的差异，可以为后续课程，如编译原理、计算机组成原理等提供一些先导知识，并利于从整个系统构成的角度来理解各个课程的作用与位置。

在内容选择上比从系统角度“自上而下/自下而上”的来组织汇编课程内容，将汇编定位为软硬件的接口、处理器对外提供功能规格。具体的，从 C 语言角度、处理器结构角度讲解汇编语言的语义及其某些新的汇编指令出现的原因，并突出汇编优化程序的特点以及“反汇编”的应用，并引入了 MIPS 汇编的内容来为同一课组的后续课程打下基础。

总的内容包括以下几个方面：

#+BEGIN_EXAMPLE
1. 基础知识
- 汇编语言与计算机系统结构
- 各类指令集初步
- 数制与整数表示
- 浮点数表示

2. X86 汇编
- 80x86 计算机组织与保护模式
- X86 指令系统与寻址方式
- C 与 X86 汇编
- X86 汇编语言程序格式与基本编程

3. MIPS 汇编
- MIPS 计算机组织初步
- 指令系统介绍
- 汇编代码与异常处理
#+END_EXAMPLE

*** 面向对象程序设计基础（C++）

i.e. Foundation of Object-Oriented Programming

本课程以 C++ 语言为基础，详细介绍用 C++ 进行面向对象的程序设计的核心思想。 C++ 语言设计成熟、理论体系完整，全面支持面向对象设计思想，应用十分广泛。以 C++ 进行面向对象程序设计，可以保证程序的调试可复用性、可维护性，有利于团队协作，便于复杂系统的设计与实现。

通过学习，本课程要求全面掌握用 C++ 语言进行面向对象程序设计的基本概念和方法，建立面向对象的思维模式，并能训练用 C++ 实现这些思路。具体内容包括： C++ 面向对象的基本语法、面向对象的编程方法和思想，以及设计模式等内容。要求理解对象、继承、多态、模板等技术手段。

*** 基于 Linux 的 C++

i.e. C++ Programming for Linux

本课程为计算机课程，以 Linux 操作系统下的 C++ 语言程序设计为基础，注重讲解程序设计的概念、方法和思路，，培养基本编程能力，以及逻辑思维和抽象思维能力。主要内容包括 C++ 基本概念， C++ 语法规范，结构化程序设计，函数与模块化、库与接口设计、复合数据类型（数组、指针、结构体）、文件、算法设计、递归程序设计、数据抽象、程序抽象、面向对象程序设计、 Linux 系统编程（进程编程、线程编程和网络编程）等。

*** C++ 程序设计实践

i.e. The Practice of C++ Programming

本课程预期掌握的关键知识点包括：类与对象、封装、继承、多态、模板、命名空间与类库、异常处理、以及 Qt 程序设计初步。

*** Java 语言程序设计

i.e. Java and Object-Oriented Programming

本课程介绍 Java 语言程序设计基础知识，包括 Java 的基础语法、面向对象和程序设计方法、 GUI 程序和多线程程序开发方法简介、数据库访问及网络程序设计方法简介。
** 编译原理

i.e. Proinciples and Practice of Compiler Construction

本课程主要介绍编译程序构造的原理与实践，课程涵盖的内容包括：词法分析，语法分析，语义分析，语法制导翻译，运行时环境，代码生成和优化等。

课程实验是一个 4~5 阶段的项目，其内容是基于课程给定框架设计和实现一个完整的小型面向对象语言的编译程序。

** 数据结构与算法分析

i.e. Data Structure and Algorithm Analysis

本课程旨在围绕各类数据结构的设计与实现，揭示其中的规律原理与方法技巧；同时针对算法设计及其性能分析，以了解掌握主要的套路与手法。

** 数据库
*** 数据库系统概论

i.e. Introduction to Database Management System

本课程主要分四大部分：
- 数据库的设计与应用：主要讲述 E-R 模型和关系模型；
- 数据库管理系统的数据存储：主要讲文件组织和索引结构；
- 数据库管理系统的核心技术：主要讲述查询处理、事务管理和并发控制；
- 数据库管理系统的体系结构扩展和前沿研究。

*** 数据库技术及应用

i.e. Principal and Application of Database

本课程内容主要包括：数据库技术基本知识、 SQL 语言、数据处理、数据可视化。

** 网络

*** 计算机网络

i.e. Computer Networks

本课程介绍计算机网络的概念、原理和体系结构，着重讲述物理层、数据链路层、介质访问层、网络层、传输层和应用层的基本原理和协议，掌握以 TCP/IP 协议族为主的网络协议结构，初步培养在 LAN 上的实际工作能力，并且了解网络新技术的最新发展。

*** 计算机网络原理

i.e. Theory of Computer Network

介绍计算机网络的概念、原理和体系结构，着重讲述物理层、数据链路层、介质访问层、网络层、传输层和应用层的基本原理和协议。

** 其他

其他课程如并行计算、深度学习、机器学习、数据挖掘与分析，大数据、神经网络、人机交互等可按照自己的兴趣和方向进行深入学习。
